/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package admin;

/**
 *
 * @author Acer Aspire Lite 15
 */
import config.Koneksi;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class LAP_TRANSAKSI_HARIAN extends javax.swing.JPanel {

    /**
     * Creates new form LAP_TRANSAKSI_HARIAN
     */
    private DefaultTableModel tableModel;
    
    public LAP_TRANSAKSI_HARIAN() {
        initComponents();
        initPanel();
    }
    
    private void initPanel() {
        tableModel = (DefaultTableModel) tabel_transaksi_harian.getModel();
        
        // Atur tanggal hari ini sebagai default dan muat datanya
        filter_DateChooser.setDate(new Date());
        loadTransactionData(filter_DateChooser.getDate(), null);

        // Listener untuk JDateChooser, akan aktif setiap kali tanggal diubah
        filter_DateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                // 'date' adalah properti yang berubah saat tanggal dipilih
                if ("date".equals(evt.getPropertyName())) {
                    loadTransactionData(filter_DateChooser.getDate(), null);
                }
            }
        });
    }

    private void loadTransactionData(Date selectedDate, String searchTerm) {
        tableModel.setRowCount(0);
        
        // Query dasar, akan difilter berdasarkan tanggal atau kata kunci pencarian
        String sql = "SELECT id_transaksi, tanggal, kasir, total_akhir, bayar, kembalian, metode_pembayaran FROM transaksi";
        
        try (Connection conn = Koneksi.getConnection()) {
            PreparedStatement ps;
            
            if (searchTerm != null && !searchTerm.isEmpty()) {
                // Logika untuk PENCARIAN
                sql += " WHERE CAST(tanggal AS TEXT) ILIKE ? OR id_transaksi ILIKE ?";
                ps = conn.prepareStatement(sql);
                String pattern = "%" + searchTerm + "%";
                ps.setString(1, pattern);
                ps.setString(2, pattern);
            } else {
                // Logika untuk FILTER TANGGAL
                sql += " WHERE tanggal::date = ?";
                ps = conn.prepareStatement(sql);
                ps.setDate(1, new java.sql.Date(selectedDate.getTime()));
            }

            ResultSet rs = ps.executeQuery();
            int no = 1;
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm");
            while (rs.next()) {
                tableModel.addRow(new Object[]{
                    no++,
                    rs.getString("id_transaksi"),
                    dateFormat.format(rs.getTimestamp("tanggal")),
                    rs.getString("kasir"),
                    rs.getLong("total_akhir"),
                    rs.getLong("bayar"),
                    rs.getLong("kembalian"),
                    rs.getString("metode_pembayaran")
                });
            }
            rs.close();
            ps.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data transaksi: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_pencarian = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_transaksi_harian = new javax.swing.JTable();
        btn_refresh = new javax.swing.JButton();
        btn_cari = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        filter_DateChooser = new com.toedter.calendar.JDateChooser();
        btn_detail = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1630, 750));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tf_pencarian.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        add(tf_pencarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 500, 40));

        tabel_transaksi_harian.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabel_transaksi_harian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NO.", "ID TRANSAKSI", "TANGGAL", "KASIR", "TOTAL", "BAYAR", "KEMBALIAN", "METODE PEMBAYARAN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel_transaksi_harian.setRowHeight(30);
        jScrollPane1.setViewportView(tabel_transaksi_harian);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 1610, 650));

        btn_refresh.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_refresh.setText("REFRESH");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });
        add(btn_refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, 150, 40));

        btn_cari.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_cari.setText("CARI");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });
        add(btn_cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 150, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("TANGGAL :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1117, 20, 120, 40));
        add(filter_DateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 20, 150, 40));

        btn_detail.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_detail.setText("DETAIL");
        btn_detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_detailActionPerformed(evt);
            }
        });
        add(btn_detail, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 150, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btn_detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_detailActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabel_transaksi_harian.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Silakan pilih transaksi yang ingin dilihat detailnya!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String transactionId = tableModel.getValueAt(selectedRow, 1).toString();
        
        JPanel detailPopupPanel = new JPanel(new BorderLayout(10, 10));
        JPanel topPanel = new JPanel(new java.awt.GridLayout(0, 4, 10, 5));
        JTable itemsTable = new JTable();
        DefaultTableModel itemsTableModel = new DefaultTableModel(new Object[]{"ID Barang", "Nama Barang", "Harga", "Jumlah", "Total"}, 0);
        itemsTable.setModel(itemsTableModel);
        
        try (Connection conn = Koneksi.getConnection()) {
            String sqlTransaksi = "SELECT * FROM transaksi WHERE id_transaksi = ?";
            try (PreparedStatement ps = conn.prepareStatement(sqlTransaksi)) {
                ps.setString(1, transactionId);
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    topPanel.add(new JLabel("ID Transaksi:"));
                    topPanel.add(new JLabel(rs.getString("id_transaksi")));
                    topPanel.add(new JLabel("Total Akhir:"));
                    topPanel.add(new JLabel("Rp " + rs.getLong("total_akhir")));
                    topPanel.add(new JLabel("Tanggal:"));
                    topPanel.add(new JLabel(new SimpleDateFormat("dd-MM-yyyy HH:mm").format(rs.getTimestamp("tanggal"))));
                    topPanel.add(new JLabel("Bayar:"));
                    topPanel.add(new JLabel("Rp " + rs.getLong("bayar")));
                    topPanel.add(new JLabel("Kasir:"));
                    topPanel.add(new JLabel(rs.getString("kasir")));
                    topPanel.add(new JLabel("Kembalian:"));
                    topPanel.add(new JLabel("Rp " + rs.getLong("kembalian")));
                }
            }
            
            String sqlDetail = "SELECT * FROM detail_transaksi WHERE id_transaksi = ?";
            try (PreparedStatement ps = conn.prepareStatement(sqlDetail)) {
                ps.setString(1, transactionId);
                ResultSet rs = ps.executeQuery();
                while(rs.next()) {
                    itemsTableModel.addRow(new Object[]{
                        rs.getString("id_barang"),
                        rs.getString("nama_barang"),
                        rs.getLong("harga_jual"),
                        rs.getInt("jumlah_beli"),
                        rs.getLong("total")
                    });
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal mengambil detail: " + e.getMessage());
            e.printStackTrace();
            return;
        }
        
        detailPopupPanel.add(topPanel, BorderLayout.NORTH);
        detailPopupPanel.add(new JScrollPane(itemsTable), BorderLayout.CENTER);
        
        JOptionPane.showMessageDialog(this, detailPopupPanel, "Detail Transaksi: " + transactionId, JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btn_detailActionPerformed

    private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed
        // TODO add your handling code here:
        loadTransactionData(null, tf_pencarian.getText());
    }//GEN-LAST:event_btn_cariActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        // TODO add your handling code here:
        tf_pencarian.setText("");
        loadTransactionData(filter_DateChooser.getDate(), null);
    }//GEN-LAST:event_btn_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cari;
    private javax.swing.JButton btn_detail;
    private javax.swing.JButton btn_refresh;
    private com.toedter.calendar.JDateChooser filter_DateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabel_transaksi_harian;
    private javax.swing.JTextField tf_pencarian;
    // End of variables declaration//GEN-END:variables
}
